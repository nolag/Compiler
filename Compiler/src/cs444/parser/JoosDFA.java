//This file is automatically generated do not modify by hand.
package cs444.parser;

import java.util.HashMap;
import java.util.Map;

import cs444.parser.IParserRule;
import cs444.parser.symbols.SymbolState;
import cs444.parser.symbols.factories.NonTerminalFactory;
public class JoosDFA implements IParserRule{
    public Map<Integer, Map<String, SymbolState>> getRules() {
        
        Map<Integer, Map<String, SymbolState>> rules = new HashMap<Integer, Map<String, SymbolState>>();
        NonTerminalFactory TYPENAME = new NonTerminalFactory("TYPENAME");
        NonTerminalFactory AMBIGUOUSNAME = new NonTerminalFactory("AMBIGUOUSNAME");
        NonTerminalFactory CLASSDECLARATION = new NonTerminalFactory("CLASSDECLARATION");
        NonTerminalFactory TYPEIMPORTONDEMANDDECLARATION = new NonTerminalFactory("TYPEIMPORTONDEMANDDECLARATION");
        NonTerminalFactory CLASSTYPE = new NonTerminalFactory("CLASSTYPE");
        NonTerminalFactory PACKAGEORTYPENAME = new NonTerminalFactory("PACKAGEORTYPENAME");
        NonTerminalFactory SINGLETYPEIMPORTDECLARATION = new NonTerminalFactory("SINGLETYPEIMPORTDECLARATION");
        NonTerminalFactory INTERFACETYPE = new NonTerminalFactory("INTERFACETYPE");
        NonTerminalFactory TYPEDECLARATIONS = new NonTerminalFactory("TYPEDECLARATIONS");
        NonTerminalFactory PACKAGENAME = new NonTerminalFactory("PACKAGENAME");
        NonTerminalFactory CLASSBODY = new NonTerminalFactory("CLASSBODY");
        NonTerminalFactory CLASSMODIFIER = new NonTerminalFactory("CLASSMODIFIER");
        NonTerminalFactory INTERFACETYPELIST = new NonTerminalFactory("INTERFACETYPELIST");
        NonTerminalFactory TYPEDECLARATION = new NonTerminalFactory("TYPEDECLARATION");
        NonTerminalFactory SUPERCLASS = new NonTerminalFactory("SUPERCLASS");
        NonTerminalFactory S = new NonTerminalFactory("S");
        NonTerminalFactory METHODNAME = new NonTerminalFactory("METHODNAME");
        NonTerminalFactory PACKAGEDECLARATION = new NonTerminalFactory("PACKAGEDECLARATION");
        NonTerminalFactory INTERFACES = new NonTerminalFactory("INTERFACES");
        NonTerminalFactory IMPORTDECLARATION = new NonTerminalFactory("IMPORTDECLARATION");
        NonTerminalFactory CLASSMODIFIERS = new NonTerminalFactory("CLASSMODIFIERS");
        NonTerminalFactory COMPILATIONUNIT = new NonTerminalFactory("COMPILATIONUNIT");
        NonTerminalFactory IMPORTDECLARATIONS = new NonTerminalFactory("IMPORTDECLARATIONS");
        NonTerminalFactory EXPRESSIONNAME = new NonTerminalFactory("EXPRESSIONNAME");
        
        Map<String, SymbolState> state10 = new HashMap<String, SymbolState>();
        rules.put(10, state10);
        state10.put("PUBLIC", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state37 = new HashMap<String, SymbolState>();
        rules.put(37, state37);
        state37.put("PROTECTED", new SymbolState(PACKAGEDECLARATION,  3));
        Map<String, SymbolState> state65 = new HashMap<String, SymbolState>();
        rules.put(65, state65);
        state65.put("STATIC", new SymbolState(CLASSDECLARATION,  4));
        Map<String, SymbolState> state32 = new HashMap<String, SymbolState>();
        rules.put(32, state32);
        state32.put("FINAL", new SymbolState(TYPEDECLARATIONS,  2));
        state65.put("ABSTRACT", new SymbolState(CLASSDECLARATION,  4));
        Map<String, SymbolState> state18 = new HashMap<String, SymbolState>();
        rules.put(18, state18);
        state18.put("CLASSMODIFIERS", new SymbolState(1));
        Map<String, SymbolState> state66 = new HashMap<String, SymbolState>();
        rules.put(66, state66);
        state66.put("PRIVATE", new SymbolState(CLASSDECLARATION,  4));
        Map<String, SymbolState> state58 = new HashMap<String, SymbolState>();
        rules.put(58, state58);
        state58.put("EOF", new SymbolState(IMPORTDECLARATIONS,  1));
        state65.put("STRICTFP", new SymbolState(CLASSDECLARATION,  4));
        Map<String, SymbolState> state68 = new HashMap<String, SymbolState>();
        rules.put(68, state68);
        state68.put("IMPORT", new SymbolState(2));
        Map<String, SymbolState> state60 = new HashMap<String, SymbolState>();
        rules.put(60, state60);
        state60.put("IMPORT", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        Map<String, SymbolState> state1 = new HashMap<String, SymbolState>();
        rules.put(1, state1);
        state1.put("CLASSMODIFIER", new SymbolState(3));
        state58.put("CLASS", new SymbolState(IMPORTDECLARATIONS,  1));
        Map<String, SymbolState> state46 = new HashMap<String, SymbolState>();
        rules.put(46, state46);
        state46.put("PUBLIC", new SymbolState(CLASSDECLARATION,  5));
        Map<String, SymbolState> state33 = new HashMap<String, SymbolState>();
        rules.put(33, state33);
        state33.put("FINAL", new SymbolState(IMPORTDECLARATIONS,  2));
        Map<String, SymbolState> state36 = new HashMap<String, SymbolState>();
        rules.put(36, state36);
        state36.put("CLASS", new SymbolState(CLASSDECLARATION,  3));
        state60.put("SEMI", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        Map<String, SymbolState> state63 = new HashMap<String, SymbolState>();
        rules.put(63, state63);
        state63.put("PUBLIC", new SymbolState(CLASSDECLARATION,  4));
        Map<String, SymbolState> state13 = new HashMap<String, SymbolState>();
        rules.put(13, state13);
        state13.put("CLASS", new SymbolState(CLASSMODIFIER,  1));
        state68.put("FINAL", new SymbolState(4));
        state36.put("ABSTRACT", new SymbolState(CLASSDECLARATION,  3));
        state36.put("PUBLIC", new SymbolState(CLASSDECLARATION,  3));
        state32.put("PROTECTED", new SymbolState(TYPEDECLARATIONS,  2));
        Map<String, SymbolState> state20 = new HashMap<String, SymbolState>();
        rules.put(20, state20);
        state20.put("PRIVATE", new SymbolState(IMPORTDECLARATION,  1));
        state68.put("CLASSMODIFIERS", new SymbolState(1));
        Map<String, SymbolState> state35 = new HashMap<String, SymbolState>();
        rules.put(35, state35);
        state35.put("EOF", new SymbolState(COMPILATIONUNIT,  1));
        Map<String, SymbolState> state0 = new HashMap<String, SymbolState>();
        rules.put(0, state0);
        state0.put("COMPILATIONUNIT", new SymbolState(5));
        Map<String, SymbolState> state26 = new HashMap<String, SymbolState>();
        rules.put(26, state26);
        state26.put("EOF", new SymbolState(IMPORTDECLARATION,  1));
        Map<String, SymbolState> state42 = new HashMap<String, SymbolState>();
        rules.put(42, state42);
        state42.put("ID", new SymbolState(6));
        state32.put("SEMI", new SymbolState(TYPEDECLARATIONS,  2));
        Map<String, SymbolState> state11 = new HashMap<String, SymbolState>();
        rules.put(11, state11);
        state11.put("RBRACE", new SymbolState(7));
        Map<String, SymbolState> state64 = new HashMap<String, SymbolState>();
        rules.put(64, state64);
        state64.put("STATIC", new SymbolState(CLASSDECLARATION,  5));
        state60.put("ABSTRACT", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        state20.put("ABSTRACT", new SymbolState(IMPORTDECLARATION,  1));
        state35.put("PUBLIC", new SymbolState(8));
        state32.put("PUBLIC", new SymbolState(TYPEDECLARATIONS,  2));
        Map<String, SymbolState> state7 = new HashMap<String, SymbolState>();
        rules.put(7, state7);
        state7.put("FINAL", new SymbolState(CLASSBODY,  2));
        state63.put("PROTECTED", new SymbolState(CLASSDECLARATION,  4));
        Map<String, SymbolState> state27 = new HashMap<String, SymbolState>();
        rules.put(27, state27);
        state27.put("STATIC", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state72 = new HashMap<String, SymbolState>();
        rules.put(72, state72);
        state72.put("DOT", new SymbolState(PACKAGENAME,  3));
        state58.put("PRIVATE", new SymbolState(IMPORTDECLARATIONS,  1));
        Map<String, SymbolState> state62 = new HashMap<String, SymbolState>();
        rules.put(62, state62);
        state62.put("ID", new SymbolState(9));
        Map<String, SymbolState> state38 = new HashMap<String, SymbolState>();
        rules.put(38, state38);
        state38.put("PRIVATE", new SymbolState(10));
        Map<String, SymbolState> state8 = new HashMap<String, SymbolState>();
        rules.put(8, state8);
        state8.put("PROTECTED", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state56 = new HashMap<String, SymbolState>();
        rules.put(56, state56);
        state56.put("LBRACE", new SymbolState(11));
        Map<String, SymbolState> state70 = new HashMap<String, SymbolState>();
        rules.put(70, state70);
        state70.put("IMPLEMENTS", new SymbolState(12));
        Map<String, SymbolState> state34 = new HashMap<String, SymbolState>();
        rules.put(34, state34);
        state34.put("EOF", new SymbolState(TYPEDECLARATION,  1));
        state35.put("PROTECTED", new SymbolState(13));
        Map<String, SymbolState> state28 = new HashMap<String, SymbolState>();
        rules.put(28, state28);
        state28.put("FINAL", new SymbolState(TYPEDECLARATIONS,  1));
        Map<String, SymbolState> state24 = new HashMap<String, SymbolState>();
        rules.put(24, state24);
        state24.put("SEMI", new SymbolState(CLASSDECLARATION,  6));
        state24.put("PUBLIC", new SymbolState(CLASSDECLARATION,  6));
        Map<String, SymbolState> state21 = new HashMap<String, SymbolState>();
        rules.put(21, state21);
        state21.put("PROTECTED", new SymbolState(CLASSMODIFIERS,  1));
        state33.put("ABSTRACT", new SymbolState(IMPORTDECLARATIONS,  2));
        state56.put("CLASSBODY", new SymbolState(14));
        state68.put("IMPORTDECLARATIONS", new SymbolState(15));
        state60.put("PUBLIC", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        state24.put("PROTECTED", new SymbolState(CLASSDECLARATION,  6));
        state8.put("FINAL", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state6 = new HashMap<String, SymbolState>();
        rules.put(6, state6);
        state6.put("IMPLEMENTS", new SymbolState(TYPENAME,  1));
        Map<String, SymbolState> state4 = new HashMap<String, SymbolState>();
        rules.put(4, state4);
        state4.put("CLASS", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state16 = new HashMap<String, SymbolState>();
        rules.put(16, state16);
        state16.put("FINAL", new SymbolState(TYPEDECLARATION,  1));
        state24.put("EOF", new SymbolState(CLASSDECLARATION,  6));
        Map<String, SymbolState> state31 = new HashMap<String, SymbolState>();
        rules.put(31, state31);
        state31.put("COMMA", new SymbolState(INTERFACETYPELIST,  3));
        Map<String, SymbolState> state47 = new HashMap<String, SymbolState>();
        rules.put(47, state47);
        state47.put("IMPLEMENTS", new SymbolState(CLASSTYPE,  1));
        state0.put("PROTECTED", new SymbolState(13));
        state8.put("STATIC", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state54 = new HashMap<String, SymbolState>();
        rules.put(54, state54);
        state54.put("COMMA", new SymbolState(INTERFACETYPE,  1));
        state16.put("EOF", new SymbolState(TYPEDECLARATION,  1));
        Map<String, SymbolState> state73 = new HashMap<String, SymbolState>();
        rules.put(73, state73);
        state73.put("LBRACE", new SymbolState(11));
        Map<String, SymbolState> state45 = new HashMap<String, SymbolState>();
        rules.put(45, state45);
        state45.put("EOF", new SymbolState(COMPILATIONUNIT,  2));
        state36.put("STRICTFP", new SymbolState(CLASSDECLARATION,  3));
        state28.put("PROTECTED", new SymbolState(TYPEDECLARATIONS,  1));
        state38.put("EOF", new SymbolState(COMPILATIONUNIT,  2));
        Map<String, SymbolState> state15 = new HashMap<String, SymbolState>();
        rules.put(15, state15);
        state15.put("SEMI", new SymbolState(16));
        Map<String, SymbolState> state39 = new HashMap<String, SymbolState>();
        rules.put(39, state39);
        state39.put("DOT", new SymbolState(17));
        state32.put("PRIVATE", new SymbolState(TYPEDECLARATIONS,  2));
        state15.put("IMPORT", new SymbolState(2));
        state8.put("ABSTRACT", new SymbolState(CLASSMODIFIER,  1));
        state18.put("PRIVATE", new SymbolState(10));
        state0.put("IMPORTDECLARATIONS", new SymbolState(18));
        Map<String, SymbolState> state44 = new HashMap<String, SymbolState>();
        rules.put(44, state44);
        state44.put("CLASSTYPE", new SymbolState(19));
        state36.put("EOF", new SymbolState(CLASSDECLARATION,  3));
        state36.put("FINAL", new SymbolState(CLASSDECLARATION,  3));
        state15.put("TYPEIMPORTONDEMANDDECLARATION", new SymbolState(20));
        state65.put("CLASS", new SymbolState(CLASSDECLARATION,  4));
        state68.put("CLASSMODIFIER", new SymbolState(21));
        state13.put("STRICTFP", new SymbolState(CLASSMODIFIER,  1));
        state0.put("CLASS", new SymbolState(22));
        state13.put("STATIC", new SymbolState(CLASSMODIFIER,  1));
        state20.put("STATIC", new SymbolState(IMPORTDECLARATION,  1));
        state26.put("PROTECTED", new SymbolState(IMPORTDECLARATION,  1));
        state10.put("PROTECTED", new SymbolState(CLASSMODIFIER,  1));
        state46.put("STATIC", new SymbolState(CLASSDECLARATION,  5));
        state36.put("SEMI", new SymbolState(CLASSDECLARATION,  3));
        Map<String, SymbolState> state67 = new HashMap<String, SymbolState>();
        rules.put(67, state67);
        state67.put("CLASSMODIFIER", new SymbolState(21));
        Map<String, SymbolState> state3 = new HashMap<String, SymbolState>();
        rules.put(3, state3);
        state3.put("ABSTRACT", new SymbolState(CLASSMODIFIERS,  2));
        state24.put("STRICTFP", new SymbolState(CLASSDECLARATION,  6));
        state34.put("STATIC", new SymbolState(TYPEDECLARATION,  1));
        state67.put("STRICTFP", new SymbolState(23));
        state32.put("EOF", new SymbolState(TYPEDECLARATIONS,  2));
        state60.put("PRIVATE", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        Map<String, SymbolState> state49 = new HashMap<String, SymbolState>();
        rules.put(49, state49);
        state49.put("ID", new SymbolState(9));
        Map<String, SymbolState> state50 = new HashMap<String, SymbolState>();
        rules.put(50, state50);
        state50.put("PRIVATE", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state3.put("FINAL", new SymbolState(CLASSMODIFIERS,  2));
        Map<String, SymbolState> state71 = new HashMap<String, SymbolState>();
        rules.put(71, state71);
        state71.put("CLASSBODY", new SymbolState(24));
        state26.put("SEMI", new SymbolState(IMPORTDECLARATION,  1));
        Map<String, SymbolState> state12 = new HashMap<String, SymbolState>();
        rules.put(12, state12);
        state12.put("ID", new SymbolState(6));
        Map<String, SymbolState> state14 = new HashMap<String, SymbolState>();
        rules.put(14, state14);
        state14.put("STRICTFP", new SymbolState(CLASSDECLARATION,  5));
        state62.put("STAR", new SymbolState(25));
        state20.put("EOF", new SymbolState(IMPORTDECLARATION,  1));
        state0.put("SINGLETYPEIMPORTDECLARATION", new SymbolState(26));
        Map<String, SymbolState> state52 = new HashMap<String, SymbolState>();
        rules.put(52, state52);
        state52.put("LBRACE", new SymbolState(11));
        state7.put("PUBLIC", new SymbolState(CLASSBODY,  2));
        state63.put("ABSTRACT", new SymbolState(CLASSDECLARATION,  4));
        state4.put("ABSTRACT", new SymbolState(CLASSMODIFIER,  1));
        state45.put("STATIC", new SymbolState(27));
        state1.put("STATIC", new SymbolState(27));
        state14.put("PRIVATE", new SymbolState(CLASSDECLARATION,  5));
        state27.put("PUBLIC", new SymbolState(CLASSMODIFIER,  1));
        state34.put("PUBLIC", new SymbolState(TYPEDECLARATION,  1));
        state50.put("CLASS", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state0.put("PUBLIC", new SymbolState(8));
        state37.put("IMPORT", new SymbolState(PACKAGEDECLARATION,  3));
        state46.put("ABSTRACT", new SymbolState(CLASSDECLARATION,  5));
        state15.put("FINAL", new SymbolState(4));
        state46.put("PRIVATE", new SymbolState(CLASSDECLARATION,  5));
        state46.put("EOF", new SymbolState(CLASSDECLARATION,  5));
        state14.put("SEMI", new SymbolState(CLASSDECLARATION,  5));
        state16.put("PRIVATE", new SymbolState(TYPEDECLARATION,  1));
        state67.put("EOF", new SymbolState(COMPILATIONUNIT,  3));
        state68.put("TYPEDECLARATION", new SymbolState(28));
        state68.put("CLASS", new SymbolState(22));
        Map<String, SymbolState> state41 = new HashMap<String, SymbolState>();
        rules.put(41, state41);
        state41.put("COMMA", new SymbolState(INTERFACETYPELIST,  1));
        state58.put("FINAL", new SymbolState(IMPORTDECLARATIONS,  1));
        state66.put("FINAL", new SymbolState(CLASSDECLARATION,  4));
        state20.put("IMPORT", new SymbolState(IMPORTDECLARATION,  1));
        state24.put("FINAL", new SymbolState(CLASSDECLARATION,  6));
        state68.put("ABSTRACT", new SymbolState(29));
        state66.put("ABSTRACT", new SymbolState(CLASSDECLARATION,  4));
        state15.put("TYPEDECLARATION", new SymbolState(28));
        Map<String, SymbolState> state57 = new HashMap<String, SymbolState>();
        rules.put(57, state57);
        state57.put("INTERFACES", new SymbolState(30));
        state66.put("STRICTFP", new SymbolState(CLASSDECLARATION,  4));
        state33.put("EOF", new SymbolState(IMPORTDECLARATIONS,  2));
        state33.put("IMPORT", new SymbolState(IMPORTDECLARATIONS,  2));
        state65.put("PROTECTED", new SymbolState(CLASSDECLARATION,  4));
        state27.put("PROTECTED", new SymbolState(CLASSMODIFIER,  1));
        state57.put("IMPLEMENTS", new SymbolState(12));
        state37.put("STRICTFP", new SymbolState(PACKAGEDECLARATION,  3));
        state45.put("PROTECTED", new SymbolState(13));
        state18.put("ABSTRACT", new SymbolState(29));
        state14.put("EOF", new SymbolState(CLASSDECLARATION,  5));
        state0.put("STATIC", new SymbolState(27));
        state42.put("INTERFACETYPE", new SymbolState(31));
        state38.put("TYPEDECLARATION", new SymbolState(32));
        state58.put("SEMI", new SymbolState(IMPORTDECLARATIONS,  1));
        state18.put("IMPORTDECLARATION", new SymbolState(33));
        state64.put("ABSTRACT", new SymbolState(CLASSDECLARATION,  5));
        state63.put("STATIC", new SymbolState(CLASSDECLARATION,  4));
        state37.put("EOF", new SymbolState(PACKAGEDECLARATION,  3));
        Map<String, SymbolState> state43 = new HashMap<String, SymbolState>();
        rules.put(43, state43);
        state43.put("LBRACE", new SymbolState(11));
        state60.put("FINAL", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        state31.put("LBRACE", new SymbolState(INTERFACETYPELIST,  3));
        Map<String, SymbolState> state9 = new HashMap<String, SymbolState>();
        rules.put(9, state9);
        state9.put("LBRACE", new SymbolState(TYPENAME,  3));
        state20.put("SEMI", new SymbolState(IMPORTDECLARATION,  1));
        state66.put("STATIC", new SymbolState(CLASSDECLARATION,  4));
        state15.put("CLASSDECLARATION", new SymbolState(34));
        state45.put("PUBLIC", new SymbolState(8));
        state45.put("ABSTRACT", new SymbolState(29));
        state45.put("STRICTFP", new SymbolState(23));
        state58.put("STATIC", new SymbolState(IMPORTDECLARATIONS,  1));
        Map<String, SymbolState> state23 = new HashMap<String, SymbolState>();
        rules.put(23, state23);
        state23.put("ABSTRACT", new SymbolState(CLASSMODIFIER,  1));
        state26.put("STRICTFP", new SymbolState(IMPORTDECLARATION,  1));
        Map<String, SymbolState> state29 = new HashMap<String, SymbolState>();
        rules.put(29, state29);
        state29.put("STRICTFP", new SymbolState(CLASSMODIFIER,  1));
        state27.put("FINAL", new SymbolState(CLASSMODIFIER,  1));
        state27.put("ABSTRACT", new SymbolState(CLASSMODIFIER,  1));
        state0.put("TYPEDECLARATIONS", new SymbolState(35));
        state0.put("TYPEIMPORTONDEMANDDECLARATION", new SymbolState(20));
        state35.put("FINAL", new SymbolState(4));
        state26.put("IMPORT", new SymbolState(IMPORTDECLARATION,  1));
        state66.put("EOF", new SymbolState(CLASSDECLARATION,  4));
        state38.put("CLASSMODIFIER", new SymbolState(21));
        state21.put("PUBLIC", new SymbolState(CLASSMODIFIERS,  1));
        state35.put("TYPEDECLARATION", new SymbolState(32));
        state14.put("FINAL", new SymbolState(CLASSDECLARATION,  5));
        state16.put("CLASS", new SymbolState(TYPEDECLARATION,  1));
        state57.put("CLASSBODY", new SymbolState(36));
        state35.put("CLASSDECLARATION", new SymbolState(34));
        state28.put("SEMI", new SymbolState(TYPEDECLARATIONS,  1));
        Map<String, SymbolState> state59 = new HashMap<String, SymbolState>();
        rules.put(59, state59);
        state59.put("DOT", new SymbolState(PACKAGENAME,  1));
        state29.put("FINAL", new SymbolState(CLASSMODIFIER,  1));
        state10.put("PRIVATE", new SymbolState(CLASSMODIFIER,  1));
        state18.put("FINAL", new SymbolState(4));
        state39.put("SEMI", new SymbolState(37));
        state50.put("FINAL", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state34.put("PROTECTED", new SymbolState(TYPEDECLARATION,  1));
        state46.put("PROTECTED", new SymbolState(CLASSDECLARATION,  5));
        state3.put("STRICTFP", new SymbolState(CLASSMODIFIERS,  2));
        state50.put("ABSTRACT", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state66.put("SEMI", new SymbolState(CLASSDECLARATION,  4));
        state45.put("SEMI", new SymbolState(16));
        state9.put("COMMA", new SymbolState(TYPENAME,  3));
        state52.put("IMPLEMENTS", new SymbolState(12));
        state10.put("STATIC", new SymbolState(CLASSMODIFIER,  1));
        state18.put("STATIC", new SymbolState(27));
        state21.put("ABSTRACT", new SymbolState(CLASSMODIFIERS,  1));
        state34.put("CLASS", new SymbolState(TYPEDECLARATION,  1));
        state68.put("TYPEDECLARATIONS", new SymbolState(38));
        state68.put("CLASSDECLARATION", new SymbolState(34));
        state68.put("SINGLETYPEIMPORTDECLARATION", new SymbolState(26));
        state50.put("PROTECTED", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state18.put("PUBLIC", new SymbolState(8));
        state23.put("STRICTFP", new SymbolState(CLASSMODIFIER,  1));
        state15.put("STATIC", new SymbolState(27));
        state64.put("PRIVATE", new SymbolState(CLASSDECLARATION,  5));
        state38.put("PUBLIC", new SymbolState(8));
        state13.put("ABSTRACT", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state55 = new HashMap<String, SymbolState>();
        rules.put(55, state55);
        state55.put("PACKAGENAME", new SymbolState(39));
        Map<String, SymbolState> state5 = new HashMap<String, SymbolState>();
        rules.put(5, state5);
        state5.put("EOF", new SymbolState(40));
        state38.put("FINAL", new SymbolState(4));
        state58.put("PUBLIC", new SymbolState(IMPORTDECLARATIONS,  1));
        state12.put("INTERFACETYPE", new SymbolState(41));
        state29.put("STATIC", new SymbolState(CLASSMODIFIER,  1));
        state45.put("FINAL", new SymbolState(4));
        state1.put("ABSTRACT", new SymbolState(29));
        state50.put("STATIC", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state29.put("ABSTRACT", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state2 = new HashMap<String, SymbolState>();
        rules.put(2, state2);
        state2.put("ID", new SymbolState(6));
        state37.put("SEMI", new SymbolState(PACKAGEDECLARATION,  3));
        state68.put("EOF", new SymbolState(COMPILATIONUNIT,  1));
        state23.put("PROTECTED", new SymbolState(CLASSMODIFIER,  1));
        state1.put("STRICTFP", new SymbolState(23));
        state29.put("PROTECTED", new SymbolState(CLASSMODIFIER,  1));
        state15.put("PUBLIC", new SymbolState(8));
        Map<String, SymbolState> state19 = new HashMap<String, SymbolState>();
        rules.put(19, state19);
        state19.put("IMPLEMENTS", new SymbolState(SUPERCLASS,  2));
        Map<String, SymbolState> state61 = new HashMap<String, SymbolState>();
        rules.put(61, state61);
        state61.put("COMMA", new SymbolState(42));
        state38.put("CLASS", new SymbolState(22));
        state34.put("STRICTFP", new SymbolState(TYPEDECLARATION,  1));
        state67.put("STATIC", new SymbolState(27));
        state36.put("STATIC", new SymbolState(CLASSDECLARATION,  3));
        state26.put("FINAL", new SymbolState(IMPORTDECLARATION,  1));
        state21.put("FINAL", new SymbolState(CLASSMODIFIERS,  1));
        state35.put("CLASSMODIFIER", new SymbolState(21));
        state19.put("LBRACE", new SymbolState(SUPERCLASS,  2));
        state52.put("INTERFACES", new SymbolState(43));
        state61.put("LBRACE", new SymbolState(INTERFACES,  2));
        state60.put("EOF", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        state68.put("STRICTFP", new SymbolState(23));
        state35.put("STRICTFP", new SymbolState(23));
        state4.put("STATIC", new SymbolState(CLASSMODIFIER,  1));
        state35.put("CLASS", new SymbolState(22));
        state52.put("EXTENDS", new SymbolState(44));
        state68.put("SEMI", new SymbolState(16));
        state36.put("PRIVATE", new SymbolState(CLASSDECLARATION,  3));
        state14.put("PROTECTED", new SymbolState(CLASSDECLARATION,  5));
        state18.put("TYPEDECLARATIONS", new SymbolState(45));
        state24.put("ABSTRACT", new SymbolState(CLASSDECLARATION,  6));
        state0.put("STRICTFP", new SymbolState(23));
        state65.put("PRIVATE", new SymbolState(CLASSDECLARATION,  4));
        state18.put("SINGLETYPEIMPORTDECLARATION", new SymbolState(26));
        state46.put("CLASS", new SymbolState(CLASSDECLARATION,  5));
        state45.put("CLASS", new SymbolState(22));
        state21.put("STATIC", new SymbolState(CLASSMODIFIERS,  1));
        state16.put("ABSTRACT", new SymbolState(TYPEDECLARATION,  1));
        state27.put("CLASS", new SymbolState(CLASSMODIFIER,  1));
        state60.put("CLASS", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        state0.put("FINAL", new SymbolState(4));
        state9.put("IMPLEMENTS", new SymbolState(TYPENAME,  3));
        state0.put("PRIVATE", new SymbolState(10));
        state10.put("FINAL", new SymbolState(CLASSMODIFIER,  1));
        state15.put("CLASSMODIFIER", new SymbolState(21));
        state54.put("LBRACE", new SymbolState(INTERFACETYPE,  1));
        state64.put("EOF", new SymbolState(CLASSDECLARATION,  5));
        state73.put("CLASSBODY", new SymbolState(46));
        state14.put("CLASS", new SymbolState(CLASSDECLARATION,  5));
        state66.put("PUBLIC", new SymbolState(CLASSDECLARATION,  4));
        state33.put("STRICTFP", new SymbolState(IMPORTDECLARATIONS,  2));
        state28.put("STATIC", new SymbolState(TYPEDECLARATIONS,  1));
        state63.put("FINAL", new SymbolState(CLASSDECLARATION,  4));
        state6.put("DOT", new SymbolState(PACKAGEORTYPENAME,  1));
        state26.put("CLASS", new SymbolState(IMPORTDECLARATION,  1));
        state15.put("ABSTRACT", new SymbolState(29));
        state24.put("STATIC", new SymbolState(CLASSDECLARATION,  6));
        state21.put("CLASS", new SymbolState(CLASSMODIFIERS,  1));
        state67.put("CLASSMODIFIERS", new SymbolState(1));
        state10.put("STRICTFP", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state30 = new HashMap<String, SymbolState>();
        rules.put(30, state30);
        state30.put("LBRACE", new SymbolState(11));
        state13.put("PUBLIC", new SymbolState(CLASSMODIFIER,  1));
        state32.put("CLASS", new SymbolState(TYPEDECLARATIONS,  2));
        state7.put("STRICTFP", new SymbolState(CLASSBODY,  2));
        state59.put("SEMI", new SymbolState(PACKAGENAME,  1));
        state65.put("FINAL", new SymbolState(CLASSDECLARATION,  4));
        state6.put("COMMA", new SymbolState(TYPENAME,  1));
        state44.put("TYPENAME", new SymbolState(47));
        state20.put("PUBLIC", new SymbolState(IMPORTDECLARATION,  1));
        state8.put("PUBLIC", new SymbolState(CLASSMODIFIER,  1));
        state32.put("STRICTFP", new SymbolState(TYPEDECLARATIONS,  2));
        state38.put("STRICTFP", new SymbolState(23));
        state2.put("PACKAGEORTYPENAME", new SymbolState(48));
        state7.put("EOF", new SymbolState(CLASSBODY,  2));
        Map<String, SymbolState> state53 = new HashMap<String, SymbolState>();
        rules.put(53, state53);
        state53.put("DOT", new SymbolState(49));
        state36.put("PROTECTED", new SymbolState(CLASSDECLARATION,  3));
        state34.put("FINAL", new SymbolState(TYPEDECLARATION,  1));
        state4.put("STRICTFP", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state25 = new HashMap<String, SymbolState>();
        rules.put(25, state25);
        state25.put("SEMI", new SymbolState(50));
        state1.put("CLASS", new SymbolState(51));
        state23.put("CLASS", new SymbolState(CLASSMODIFIER,  1));
        state16.put("PROTECTED", new SymbolState(TYPEDECLARATION,  1));
        state50.put("STRICTFP", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state15.put("STRICTFP", new SymbolState(23));
        state6.put("SEMI", new SymbolState(TYPENAME,  1));
        state28.put("ABSTRACT", new SymbolState(TYPEDECLARATIONS,  1));
        state37.put("CLASS", new SymbolState(PACKAGEDECLARATION,  3));
        state33.put("CLASS", new SymbolState(IMPORTDECLARATIONS,  2));
        state24.put("CLASS", new SymbolState(CLASSDECLARATION,  6));
        state7.put("SEMI", new SymbolState(CLASSBODY,  2));
        state67.put("CLASSDECLARATION", new SymbolState(34));
        state45.put("PRIVATE", new SymbolState(10));
        state21.put("PRIVATE", new SymbolState(CLASSMODIFIERS,  1));
        state33.put("PRIVATE", new SymbolState(IMPORTDECLARATIONS,  2));
        state0.put("CLASSDECLARATION", new SymbolState(34));
        state45.put("CLASSMODIFIER", new SymbolState(21));
        state8.put("PRIVATE", new SymbolState(CLASSMODIFIER,  1));
        state38.put("SEMI", new SymbolState(16));
        state3.put("CLASS", new SymbolState(CLASSMODIFIERS,  2));
        state18.put("IMPORT", new SymbolState(2));
        state28.put("CLASS", new SymbolState(TYPEDECLARATIONS,  1));
        Map<String, SymbolState> state51 = new HashMap<String, SymbolState>();
        rules.put(51, state51);
        state51.put("ID", new SymbolState(52));
        state8.put("CLASS", new SymbolState(CLASSMODIFIER,  1));
        state33.put("PUBLIC", new SymbolState(IMPORTDECLARATIONS,  2));
        state41.put("LBRACE", new SymbolState(INTERFACETYPELIST,  1));
        state3.put("PRIVATE", new SymbolState(CLASSMODIFIERS,  2));
        state3.put("PROTECTED", new SymbolState(CLASSMODIFIERS,  2));
        state1.put("FINAL", new SymbolState(4));
        state46.put("FINAL", new SymbolState(CLASSDECLARATION,  5));
        state44.put("PACKAGEORTYPENAME", new SymbolState(53));
        state50.put("EOF", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state18.put("EOF", new SymbolState(COMPILATIONUNIT,  1));
        state45.put("CLASSDECLARATION", new SymbolState(34));
        state70.put("LBRACE", new SymbolState(11));
        state33.put("PROTECTED", new SymbolState(IMPORTDECLARATIONS,  2));
        state15.put("EOF", new SymbolState(COMPILATIONUNIT,  2));
        state6.put("LBRACE", new SymbolState(TYPENAME,  1));
        state20.put("STRICTFP", new SymbolState(IMPORTDECLARATION,  1));
        state0.put("TYPEDECLARATION", new SymbolState(28));
        state7.put("ABSTRACT", new SymbolState(CLASSBODY,  2));
        state15.put("PRIVATE", new SymbolState(10));
        state47.put("LBRACE", new SymbolState(CLASSTYPE,  1));
        state33.put("SEMI", new SymbolState(IMPORTDECLARATIONS,  2));
        state14.put("STATIC", new SymbolState(CLASSDECLARATION,  5));
        state67.put("CLASS", new SymbolState(22));
        state34.put("PRIVATE", new SymbolState(TYPEDECLARATION,  1));
        state1.put("PROTECTED", new SymbolState(13));
        state32.put("STATIC", new SymbolState(TYPEDECLARATIONS,  2));
        state42.put("TYPENAME", new SymbolState(54));
        state8.put("STRICTFP", new SymbolState(CLASSMODIFIER,  1));
        state50.put("SEMI", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state20.put("PROTECTED", new SymbolState(IMPORTDECLARATION,  1));
        state27.put("PRIVATE", new SymbolState(CLASSMODIFIER,  1));
        state66.put("CLASS", new SymbolState(CLASSDECLARATION,  4));
        state57.put("LBRACE", new SymbolState(11));
        state0.put("PACKAGE", new SymbolState(55));
        state64.put("PUBLIC", new SymbolState(CLASSDECLARATION,  5));
        state63.put("PRIVATE", new SymbolState(CLASSDECLARATION,  4));
        state37.put("FINAL", new SymbolState(PACKAGEDECLARATION,  3));
        state18.put("CLASSDECLARATION", new SymbolState(34));
        state58.put("STRICTFP", new SymbolState(IMPORTDECLARATIONS,  1));
        state16.put("PUBLIC", new SymbolState(TYPEDECLARATION,  1));
        Map<String, SymbolState> state40 = new HashMap<String, SymbolState>();
        rules.put(40, state40);
        state40.put("IF", new SymbolState(S,  2));
        state52.put("SUPERCLASS", new SymbolState(56));
        state0.put("IMPORT", new SymbolState(2));
        state0.put("CLASSMODIFIERS", new SymbolState(1));
        state7.put("STATIC", new SymbolState(CLASSBODY,  2));
        Map<String, SymbolState> state22 = new HashMap<String, SymbolState>();
        rules.put(22, state22);
        state22.put("ID", new SymbolState(57));
        state60.put("STATIC", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        state1.put("PUBLIC", new SymbolState(8));
        state18.put("CLASSMODIFIER", new SymbolState(21));
        state37.put("ABSTRACT", new SymbolState(PACKAGEDECLARATION,  3));
        state26.put("ABSTRACT", new SymbolState(IMPORTDECLARATION,  1));
        state0.put("IMPORTDECLARATION", new SymbolState(58));
        state28.put("EOF", new SymbolState(TYPEDECLARATIONS,  1));
        state15.put("IMPORTDECLARATION", new SymbolState(33));
        state18.put("PROTECTED", new SymbolState(13));
        state13.put("PROTECTED", new SymbolState(CLASSMODIFIER,  1));
        state21.put("STRICTFP", new SymbolState(CLASSMODIFIERS,  1));
        state63.put("SEMI", new SymbolState(CLASSDECLARATION,  4));
        state7.put("PRIVATE", new SymbolState(CLASSBODY,  2));
        state65.put("EOF", new SymbolState(CLASSDECLARATION,  4));
        state55.put("ID", new SymbolState(59));
        state14.put("PUBLIC", new SymbolState(CLASSDECLARATION,  5));
        state26.put("PUBLIC", new SymbolState(IMPORTDECLARATION,  1));
        state44.put("ID", new SymbolState(6));
        state18.put("TYPEIMPORTONDEMANDDECLARATION", new SymbolState(20));
        state35.put("CLASSMODIFIERS", new SymbolState(1));
        state13.put("PRIVATE", new SymbolState(CLASSMODIFIER,  1));
        state45.put("CLASSMODIFIERS", new SymbolState(1));
        state67.put("FINAL", new SymbolState(4));
        Map<String, SymbolState> state69 = new HashMap<String, SymbolState>();
        rules.put(69, state69);
        state69.put("SEMI", new SymbolState(60));
        state10.put("CLASS", new SymbolState(CLASSMODIFIER,  1));
        state46.put("SEMI", new SymbolState(CLASSDECLARATION,  5));
        state9.put("SEMI", new SymbolState(TYPENAME,  3));
        state26.put("PRIVATE", new SymbolState(IMPORTDECLARATION,  1));
        state64.put("SEMI", new SymbolState(CLASSDECLARATION,  5));
        state67.put("PUBLIC", new SymbolState(8));
        state12.put("INTERFACETYPELIST", new SymbolState(61));
        state10.put("ABSTRACT", new SymbolState(CLASSMODIFIER,  1));
        state23.put("PUBLIC", new SymbolState(CLASSMODIFIER,  1));
        state68.put("STATIC", new SymbolState(27));
        state35.put("STATIC", new SymbolState(27));
        state64.put("FINAL", new SymbolState(CLASSDECLARATION,  5));
        state18.put("SEMI", new SymbolState(16));
        state33.put("STATIC", new SymbolState(IMPORTDECLARATIONS,  2));
        state37.put("PRIVATE", new SymbolState(PACKAGEDECLARATION,  3));
        state38.put("PROTECTED", new SymbolState(13));
        state50.put("PUBLIC", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state4.put("PRIVATE", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state48 = new HashMap<String, SymbolState>();
        rules.put(48, state48);
        state48.put("DOT", new SymbolState(62));
        state30.put("CLASSBODY", new SymbolState(63));
        state23.put("FINAL", new SymbolState(CLASSMODIFIER,  1));
        state67.put("TYPEDECLARATION", new SymbolState(32));
        state66.put("PROTECTED", new SymbolState(CLASSDECLARATION,  4));
        state67.put("PROTECTED", new SymbolState(13));
        state18.put("CLASS", new SymbolState(22));
        state29.put("PUBLIC", new SymbolState(CLASSMODIFIER,  1));
        state43.put("CLASSBODY", new SymbolState(64));
        state13.put("FINAL", new SymbolState(CLASSMODIFIER,  1));
        state65.put("PUBLIC", new SymbolState(CLASSDECLARATION,  4));
        state18.put("STRICTFP", new SymbolState(23));
        state58.put("IMPORT", new SymbolState(IMPORTDECLARATIONS,  1));
        state58.put("ABSTRACT", new SymbolState(IMPORTDECLARATIONS,  1));
        state63.put("CLASS", new SymbolState(CLASSDECLARATION,  4));
        state60.put("PROTECTED", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        state52.put("CLASSBODY", new SymbolState(65));
        state27.put("STRICTFP", new SymbolState(CLASSMODIFIER,  1));
        state70.put("CLASSBODY", new SymbolState(66));
        state15.put("TYPEDECLARATIONS", new SymbolState(67));
        state15.put("CLASS", new SymbolState(22));
        state15.put("SINGLETYPEIMPORTDECLARATION", new SymbolState(26));
        state60.put("STRICTFP", new SymbolState(SINGLETYPEIMPORTDECLARATION,  3));
        state0.put("PACKAGEDECLARATION", new SymbolState(68));
        state3.put("STATIC", new SymbolState(CLASSMODIFIERS,  2));
        state4.put("PROTECTED", new SymbolState(CLASSMODIFIER,  1));
        state29.put("CLASS", new SymbolState(CLASSMODIFIER,  1));
        state2.put("TYPENAME", new SymbolState(69));
        state57.put("EXTENDS", new SymbolState(44));
        state12.put("TYPENAME", new SymbolState(54));
        state68.put("PRIVATE", new SymbolState(10));
        state68.put("PUBLIC", new SymbolState(8));
        state35.put("ABSTRACT", new SymbolState(29));
        state57.put("SUPERCLASS", new SymbolState(70));
        state68.put("TYPEIMPORTONDEMANDDECLARATION", new SymbolState(20));
        state28.put("STRICTFP", new SymbolState(TYPEDECLARATIONS,  1));
        state38.put("STATIC", new SymbolState(27));
        state14.put("ABSTRACT", new SymbolState(CLASSDECLARATION,  5));
        state64.put("STRICTFP", new SymbolState(CLASSDECLARATION,  5));
        state45.put("TYPEDECLARATION", new SymbolState(32));
        state15.put("CLASSMODIFIERS", new SymbolState(1));
        state0.put("SEMI", new SymbolState(16));
        state0.put("ABSTRACT", new SymbolState(29));
        state56.put("INTERFACES", new SymbolState(71));
        state64.put("PROTECTED", new SymbolState(CLASSDECLARATION,  5));
        state65.put("SEMI", new SymbolState(CLASSDECLARATION,  4));
        state23.put("PRIVATE", new SymbolState(CLASSMODIFIER,  1));
        Map<String, SymbolState> state17 = new HashMap<String, SymbolState>();
        rules.put(17, state17);
        state17.put("ID", new SymbolState(72));
        state18.put("TYPEDECLARATION", new SymbolState(28));
        state0.put("CLASSMODIFIER", new SymbolState(21));
        state12.put("PACKAGEORTYPENAME", new SymbolState(53));
        state38.put("CLASSMODIFIERS", new SymbolState(1));
        state26.put("STATIC", new SymbolState(IMPORTDECLARATION,  1));
        state32.put("ABSTRACT", new SymbolState(TYPEDECLARATIONS,  2));
        state35.put("PRIVATE", new SymbolState(10));
        state16.put("STRICTFP", new SymbolState(TYPEDECLARATION,  1));
        state16.put("STATIC", new SymbolState(TYPEDECLARATION,  1));
        state71.put("LBRACE", new SymbolState(11));
        state3.put("PUBLIC", new SymbolState(CLASSMODIFIERS,  2));
        state67.put("ABSTRACT", new SymbolState(29));
        state23.put("STATIC", new SymbolState(CLASSMODIFIER,  1));
        state4.put("PUBLIC", new SymbolState(CLASSMODIFIER,  1));
        state29.put("PRIVATE", new SymbolState(CLASSMODIFIER,  1));
        state37.put("PUBLIC", new SymbolState(PACKAGEDECLARATION,  3));
        state67.put("SEMI", new SymbolState(16));
        state63.put("STRICTFP", new SymbolState(CLASSDECLARATION,  4));
        state28.put("PRIVATE", new SymbolState(TYPEDECLARATIONS,  1));
        state7.put("CLASS", new SymbolState(CLASSBODY,  2));
        state35.put("SEMI", new SymbolState(16));
        state42.put("PACKAGEORTYPENAME", new SymbolState(53));
        state38.put("CLASSDECLARATION", new SymbolState(34));
        state46.put("STRICTFP", new SymbolState(CLASSDECLARATION,  5));
        state67.put("PRIVATE", new SymbolState(10));
        state16.put("SEMI", new SymbolState(TYPEDECLARATION,  1));
        state34.put("ABSTRACT", new SymbolState(TYPEDECLARATION,  1));
        state50.put("IMPORT", new SymbolState(TYPEIMPORTONDEMANDDECLARATION,  5));
        state20.put("FINAL", new SymbolState(IMPORTDECLARATION,  1));
        state28.put("PUBLIC", new SymbolState(TYPEDECLARATIONS,  1));
        state20.put("CLASS", new SymbolState(IMPORTDECLARATION,  1));
        state7.put("PROTECTED", new SymbolState(CLASSBODY,  2));
        state72.put("SEMI", new SymbolState(PACKAGENAME,  3));
        state68.put("PROTECTED", new SymbolState(13));
        state56.put("IMPLEMENTS", new SymbolState(12));
        state63.put("EOF", new SymbolState(CLASSDECLARATION,  4));
        state64.put("CLASS", new SymbolState(CLASSDECLARATION,  5));
        state34.put("SEMI", new SymbolState(TYPEDECLARATION,  1));
        state68.put("IMPORTDECLARATION", new SymbolState(58));
        state58.put("PROTECTED", new SymbolState(IMPORTDECLARATIONS,  1));
        state24.put("PRIVATE", new SymbolState(CLASSDECLARATION,  6));
        state4.put("FINAL", new SymbolState(CLASSMODIFIER,  1));
        state70.put("INTERFACES", new SymbolState(73));
        state1.put("PRIVATE", new SymbolState(10));
        state38.put("ABSTRACT", new SymbolState(29));
        state9.put("DOT", new SymbolState(PACKAGEORTYPENAME,  3));
        state15.put("PROTECTED", new SymbolState(13));
        state37.put("STATIC", new SymbolState(PACKAGEDECLARATION,  3));
        return rules;
    }
}
